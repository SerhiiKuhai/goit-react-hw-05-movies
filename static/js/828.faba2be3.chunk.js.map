{"version":3,"file":"static/js/828.faba2be3.chunk.js","mappings":"uNAEaA,EAAYC,EAAAA,EAAAA,IAAH,6QAeTC,EAAeD,EAAAA,EAAAA,IAAH,qH,uGCfZE,EAAOF,EAAAA,EAAAA,GAAH,oFAMJG,EAAWH,EAAAA,EAAAA,GAAH,4H,mICNRI,EAAUJ,EAAAA,EAAAA,GAAH,yGAMPK,EAAUL,EAAAA,EAAAA,GAAH,sFAKPM,EAAUN,EAAAA,EAAAA,GAAH,qF,iHCgEpB,UArEsB,WAAO,IAAD,IAC1B,GAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,6CAAyCF,EAAzC,mBAWT,OARAG,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAiBF,GACdG,MAAK,SAAAC,GACJb,EAAea,EAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACN,IAGFV,IACE,iCACE,UAAC,IAAD,YACE,SAAC,EAAAkB,KAAD,CAAMC,GAAIf,EAAoBgB,QAA9B,6BACA,UAAC,IAAD,WACiC,OAA9BpB,EAAYqB,gBACX,gBACEC,MAAM,QACNC,OAAO,QACPC,IAAG,8CAAyCxB,EAAYqB,eACxDI,IAAKzB,EAAY0B,kBAIrB,4BACE,SAAC,KAAD,UAAU1B,EAAY0B,kBACtB,yCAAiBC,KAAKC,MAAiC,GAA3B5B,EAAY6B,cAAxC,QACA,SAAC,KAAD,wBACA,uBAAI7B,EAAY8B,YAChB,SAAC,KAAD,sBACA,SAAC,IAAD,UACG9B,EAAY+B,QACX/B,EAAY+B,OAAOC,KAAI,SAAAC,GACrB,OACE,UAAC,IAAD,eAA6BA,EAAQC,OAAtBD,EAAQE,GAE1B,gBAMX,UAAC,IAAD,YACE,SAAC,KAAD,sCACA,UAAC,IAAD,YACE,SAAC,IAAD,WACE,SAAC,EAAAjB,KAAD,CAAMC,GAAG,OAAT,qBAEF,SAAC,IAAD,WACE,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,8BAKN,SAAC,EAAAiB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAKT,C,qFC3EM,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gFACC4B,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAND,SASiBC,MAAMjC,EAAK4B,GAASzB,MAAK,SAAA+B,GAAG,OAAIA,EAAIC,MAAR,IAT7C,cASCC,EATD,yBAUEA,GAVF,kE","sources":["components/Container/Container.styled.jsx","components/Grid/Grid.styled.jsx","components/Title/Title.styled.jsx","pages/MoviesDetails.jsx","service/GetMoviesService.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: bloc;\n  max-width: 90%;\n  padding: 4% 10%;\n\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  color: #010101;\n\n  background-color: rgb(235, 235, 235);\n  box-shadow: 10px 10px 8px 2px rgba(0, 0, 0, 0.3);\n`;\n\nexport const ContainerDiv = styled.div`\n  display: flex;\n  margin-top: 10px;\n  gap: 20px;\n  background-color: rgb(235, 235, 235);\n`;\n\n","import styled from '@emotion/styled';\n\nexport const Grid = styled.ul`\n  display: block;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nexport const GridItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  margin-bottom: 5px;\n  gap: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const TitleH1 = styled.h1`\n  color: rgba(0, 0, 0, 0.8);\n  padding: 16px;\n  padding-top: 0;\n  margin: 0;\n`;\nexport const TitleH2 = styled.h2`\n  color: rgba(0, 0, 0, 0.8);\n  padding: 16px;\n  margin: 0;\n`;\nexport const TitleH3 = styled.h3`\n  color: rgba(0, 0, 0, 0.8);\n  padding: 16px;\n  margin: 0;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useRef, Suspense } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { getMoviesService } from 'service/GetMoviesService';\nimport { Grid, GridItem } from 'components/Grid/Grid.styled';\nimport { TitleH1, TitleH2, TitleH3 } from 'components/Title/Title.styled';\nimport { Container, ContainerDiv } from 'components/Container/Container.styled';\n\nconst MoviesDetails = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n\n\n  useEffect(() => {\n    getMoviesService(URL)\n      .then(results => {\n        setSearchMovie(results);\n      })\n      .catch(error => console.error(error));\n  }, [URL]);\n\n  return (\n    searchMovie && (\n      <>\n        <Container>\n          <Link to={backLinkLocationRef.current}>&larr; Go back</Link>\n          <ContainerDiv>\n            {searchMovie.backdrop_path !== null && (\n              <img\n                width=\"250px\"\n                height=\"250px\"\n                src={`https://image.tmdb.org/t/p/original/${searchMovie.backdrop_path}`}\n                alt={searchMovie.original_title}\n              />\n            )}\n\n            <div>\n              <TitleH1>{searchMovie.original_title}</TitleH1>\n              <p>User Scrore: {Math.round(searchMovie.vote_average * 10)}%</p>\n              <TitleH2>Overview</TitleH2>\n              <p>{searchMovie.overview}</p>\n              <TitleH2>Genres</TitleH2>\n              <Grid>\n                {searchMovie.genres &&\n                  searchMovie.genres.map(element => {\n                    return (\n                      <GridItem key={element.id}> {element.name}</GridItem>\n                    );\n                  })}\n              </Grid>\n            </div>\n          </ContainerDiv>\n        </Container>\n\n        <Container>\n          <TitleH3>Additional information</TitleH3>\n          <Grid>\n            <GridItem>\n              <Link to=\"cast\">Cast</Link>\n            </GridItem>\n            <GridItem>\n              <Link to=\"reviews\">Reviews</Link>\n            </GridItem>\n          </Grid>\n        </Container>\n\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </>\n    )\n  );\n};\n\nexport default MoviesDetails;\n","export async function getMoviesService(URL) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZTc4ZGQ2OWNiMmJmYjVkNjY5MmZjZmI4ZTMwMDA2MiIsInN1YiI6IjY0OTc0ZDNlZWI3OWMyMDBjNTZkNzIwOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lOL2nEX5xQqOUvs2EEZKNZBmeuN-zokX2Enf8lSL4ZA',\n    },\n  };\n  const resuits = await fetch(URL, options).then(res => res.json());\n  return resuits;\n}\n"],"names":["Container","styled","ContainerDiv","Grid","GridItem","TitleH1","TitleH2","TitleH3","useState","searchMovie","setSearchMovie","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","URL","useEffect","getMoviesService","then","results","catch","error","console","Link","to","current","backdrop_path","width","height","src","alt","original_title","Math","round","vote_average","overview","genres","map","element","name","id","Suspense","fallback","options","method","headers","accept","Authorization","fetch","res","json","resuits"],"sourceRoot":""}