{"version":3,"file":"static/js/186.b3b8a7b2.chunk.js","mappings":"2NAGQA,EAAcC,EAAQ,IAAtBD,UAEKE,EAAU,WACrB,IAAQC,EAAYH,IAAZG,QACFC,EAAG,6CAAyCD,EAAzC,kCACT,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAiBL,GACdM,MAAK,SAAAC,GACJJ,EAAWI,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACT,IAEGE,EAAQS,eACb,wBACGT,EAAQK,SACPL,EAAQK,QAAQK,KAAI,SAAAC,GAClB,OACE,2BACE,wBAAKA,EAAQC,UACb,uBAAID,EAAQE,YAFLF,EAAQG,GAKpB,OAGL,oEAEH,C,qFCjCM,SAAeX,EAAtB,+CAAO,OAAP,oBAAO,WAAgCL,GAAhC,gFACCiB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAND,SASiBC,MAAMtB,EAAKiB,GAASX,MAAK,SAAAiB,GAAG,OAAIA,EAAIC,MAAR,IAT7C,cASCC,EATD,yBAUEA,GAVF,kE","sources":["components/Reviews/Reviews.jsx","service/GetMoviesService.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getMoviesService } from 'service/GetMoviesService';\n\nconst { useParams } = require('react-router-dom');\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMoviesService(URL)\n      .then(results => {\n        setReviews(results);\n      })\n      .catch(error => console.error(error));\n  }, [URL]);\n\n  return reviews.total_results ? (\n    <ul>\n      {reviews.results &&\n        reviews.results.map(element => {\n          return (\n            <li key={element.id}>\n              <h3>{element.author}</h3>\n              <p>{element.content}</p>\n            </li>\n          );\n        })}\n    </ul>\n  ) : (\n    <p>We don't have any reviews for this movie.</p>\n  );\n};\n","export async function getMoviesService(URL) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZTc4ZGQ2OWNiMmJmYjVkNjY5MmZjZmI4ZTMwMDA2MiIsInN1YiI6IjY0OTc0ZDNlZWI3OWMyMDBjNTZkNzIwOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lOL2nEX5xQqOUvs2EEZKNZBmeuN-zokX2Enf8lSL4ZA',\n    },\n  };\n  const resuits = await fetch(URL, options).then(res => res.json());\n  return resuits;\n}\n"],"names":["useParams","require","Reviews","movieId","URL","useState","reviews","setReviews","useEffect","getMoviesService","then","results","catch","error","console","total_results","map","element","author","content","id","options","method","headers","accept","Authorization","fetch","res","json","resuits"],"sourceRoot":""}