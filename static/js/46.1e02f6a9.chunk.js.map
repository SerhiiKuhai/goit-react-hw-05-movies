{"version":3,"file":"static/js/46.1e02f6a9.chunk.js","mappings":"oLAEaA,E,OAASC,EAAAA,OAAH,gd,uGCANC,EAAOD,EAAAA,EAAAA,GAAH,oFAMJE,EAAWF,EAAAA,EAAAA,GAAH,4H,wICNRG,EAAaH,EAAAA,EAAAA,KAAH,0JASVI,EAAcJ,EAAAA,EAAAA,MAAH,sf,2BCoDxB,EAxDe,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GACrCC,EAAG,0DAAsDF,EAAtD,+CAETG,EAAAA,EAAAA,YAAU,WACM,KAAVH,IAEJI,EAAAA,EAAAA,GAAiBF,GACdG,MAAK,SAAAC,GACJZ,EAAgBY,EACjB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACN,EAAKF,IAUT,OACE,iCACE,UAACV,EAAD,CAAYoB,SAVK,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACfjB,EAAgB,CAAEG,MAAOa,EAAKE,SAASf,MAAMgB,QAC7CH,EAAKI,OACN,EAIG,WACE,SAAC1B,EAAD,CACE2B,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAAC,IAAD,CAAQH,KAAK,SAAb,UACE,0CAGH1B,IACC,SAAC,IAAD,UACGA,EAAaa,QAAQiB,KAAI,SAAAC,GACxB,OACE,SAAC,IAAD,WACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,UAAKF,EAAYG,IAAMC,MAAO,CAAEC,KAAM/B,GAA9C,SACG0B,EAAYM,kBAFFN,EAAYG,GAM9B,QAKV,C,qFC7DM,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gFACC6B,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAND,SASiBC,MAAMlC,EAAK6B,GAAS1B,MAAK,SAAAgC,GAAG,OAAIA,EAAIC,MAAR,IAT7C,cASCC,EATD,yBAUEA,GAVF,kE","sources":["components/Button/Button.styled.jsx","components/Grid/Grid.styled.jsx","components/Form/Form.styled.jsx","pages/Movies.jsx","service/GetMoviesService.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: block;\n  height: 30px;\n  color: rgb(0, 0, 0);\n  background-color: rgb(200, 200, 200);\n\n  border-radius: 4px;\n  border: 1px solid rgb(172, 172, 172);\n  box-shadow: 2px 2px 1px 1px rgba(0, 0, 0, 0.2);\n\n  padding: 6px 20px;\n  font-weight: 600;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: rgb(250, 250, 250);\n    background-color: rgb(50, 40, 185);\n    box-shadow: 6px 6px 4px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Grid = styled.ul`\n  display: block;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nexport const GridItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  margin-bottom: 5px;\n  gap: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FormMovies = styled.form`\n  display: flex;\n  justify-content: flex-start\n  flex-direction: row;\n  max-width: 400px;\n  margin: 20px auto;\n  gap: 20px;\n`;\n\nexport const InputMovies = styled.input`\n  display: flex;\n  width: 100%;\n  height: 20px;\n\n  border-style: none;\n  border: 1px solid rgb(172, 172, 172);\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 2px 2px 1px 1px rgba(0, 0, 0, 0.2);\n\n  padding: 4px;\n  outline: none;\n  margin-bottom: 20px;\n\n  transition: 0.25s cubic-bezier(0.7, 0.98, 0.86, 0.98);\n\n  font-size: 18px;\n  color: #212121;\n  font-weight: 300;\n  letter-spacing: 0.03em;\n\n  &::placeholder {\n    font-weight: 200;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesService } from '../service/GetMoviesService';\nimport { FormMovies, InputMovies } from 'components/Form/Form.styled';\nimport { Button } from 'components/Button/Button.styled';\nimport { Grid, GridItem } from 'components/Grid/Grid.styled';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n  const URL = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  useEffect(() => {\n    if (query === '') return;\n\n    getMoviesService(URL)\n      .then(results => {\n        setSearchMovies(results);\n      })\n      .catch(error => console.error(error));\n  }, [URL, query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <FormMovies onSubmit={handleSubmit}>\n        <InputMovies\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search Movies\"\n        />\n        <Button type=\"submit\">\n          <span>Search</span>\n        </Button>\n      </FormMovies>\n      {searchMovies && (\n        <Grid>\n          {searchMovies.results.map(searchMovie => {\n            return (\n              <GridItem key={searchMovie.id}>\n                <Link to={`${searchMovie.id}`} state={{ from: location }}>\n                  {searchMovie.original_title}\n                </Link>\n              </GridItem>\n            );\n          })}\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","export async function getMoviesService(URL) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZTc4ZGQ2OWNiMmJmYjVkNjY5MmZjZmI4ZTMwMDA2MiIsInN1YiI6IjY0OTc0ZDNlZWI3OWMyMDBjNTZkNzIwOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lOL2nEX5xQqOUvs2EEZKNZBmeuN-zokX2Enf8lSL4ZA',\n    },\n  };\n  const resuits = await fetch(URL, options).then(res => res.json());\n  return resuits;\n}\n"],"names":["Button","styled","Grid","GridItem","FormMovies","InputMovies","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","URL","useEffect","getMoviesService","then","results","catch","error","console","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","name","type","autoComplete","autoFocus","placeholder","map","searchMovie","Link","to","id","state","from","original_title","options","method","headers","accept","Authorization","fetch","res","json","resuits"],"sourceRoot":""}