{"version":3,"file":"static/js/247.8f2a1b31.chunk.js","mappings":"0OAKQA,EAAcC,EAAQ,IAAtBD,UAEKE,EAAO,WAClB,IAAQC,EAAYH,IAAZG,QACFC,EAAG,6CAAyCD,EAAzC,2BACT,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAiBL,GACdM,MAAK,SAAAC,GACJJ,EAAQI,EACT,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACT,IAGFE,IACE,SAAC,IAAD,WACE,SAAC,IAAD,UACGA,EAAKA,MACJA,EAAKA,KAAKS,KAAI,SAAAC,GACZ,OACE,UAAC,IAAD,WAC4B,OAAzBA,EAAQC,eACP,gBACEC,MAAM,QACNC,OAAO,QACPC,IAAG,0CAAqCJ,EAAQC,cAChDI,IAAKL,EAAQM,QAIjB,wBAAKN,EAAQM,QACb,uBAAIN,EAAQO,cAXCP,EAAQQ,GAc1B,OAKZ,C,uGC5CYC,EAAYC,EAAAA,EAAAA,IAAH,6QAeTC,EAAeD,EAAAA,EAAAA,IAAH,qH,uGCfZE,EAAOF,EAAAA,EAAAA,GAAH,oFAMJG,EAAWH,EAAAA,EAAAA,GAAH,4H,qFCRd,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCL,GAAhC,gFACC0B,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAND,SASiBC,MAAM/B,EAAK0B,GAASpB,MAAK,SAAA0B,GAAG,OAAIA,EAAIC,MAAR,IAT7C,cASCC,EATD,yBAUEA,GAVF,kE","sources":["components/Cast/Cast.jsx","components/Container/Container.styled.jsx","components/Grid/Grid.styled.jsx","service/GetMoviesService.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getMoviesService } from 'service/GetMoviesService';\nimport { Grid, GridItem } from 'components/Grid/Grid.styled';\nimport { Container } from 'components/Container/Container.styled';\n\nconst { useParams } = require('react-router-dom');\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMoviesService(URL)\n      .then(results => {\n        setCast(results);\n      })\n      .catch(error => console.error(error));\n  }, [URL]);\n\n  return (\n    cast && (\n      <Container>\n        <Grid>\n          {cast.cast &&\n            cast.cast.map(element => {\n              return (\n                <GridItem key={element.id}>\n                  {element.profile_path !== null && (\n                    <img\n                      width=\"100px\"\n                      height=\"150px\"\n                      src={`https://image.tmdb.org/t/p/w500/${element.profile_path}`}\n                      alt={element.name}\n                    />\n                  )}\n\n                  <h3>{element.name}</h3>\n                  <p>{element.character}</p>\n                </GridItem>\n              );\n            })}\n        </Grid>\n      </Container>\n    )\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: bloc;\n  max-width: 90%;\n  padding: 4% 10%;\n\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  color: #010101;\n\n  background-color: rgb(235, 235, 235);\n  box-shadow: 10px 10px 8px 2px rgba(0, 0, 0, 0.3);\n`;\n\nexport const ContainerDiv = styled.div`\n  display: flex;\n  margin-top: 10px;\n  gap: 20px;\n  background-color: rgb(235, 235, 235);\n`;\n\n","import styled from '@emotion/styled';\n\nexport const Grid = styled.ul`\n  display: block;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nexport const GridItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  margin-bottom: 5px;\n  gap: 10px;\n`;\n","export async function getMoviesService(URL) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZTc4ZGQ2OWNiMmJmYjVkNjY5MmZjZmI4ZTMwMDA2MiIsInN1YiI6IjY0OTc0ZDNlZWI3OWMyMDBjNTZkNzIwOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lOL2nEX5xQqOUvs2EEZKNZBmeuN-zokX2Enf8lSL4ZA',\n    },\n  };\n  const resuits = await fetch(URL, options).then(res => res.json());\n  return resuits;\n}\n"],"names":["useParams","require","Cast","movieId","URL","useState","cast","setCast","useEffect","getMoviesService","then","results","catch","error","console","map","element","profile_path","width","height","src","alt","name","character","id","Container","styled","ContainerDiv","Grid","GridItem","options","method","headers","accept","Authorization","fetch","res","json","resuits"],"sourceRoot":""}